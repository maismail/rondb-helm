# Copyright (c) 2024-2025 Hopsworks AB. All rights reserved.

{{ if or .Values.backups.enabled .Values.restoreFromBackup.backupId }}
apiVersion: v1
kind: ConfigMap
metadata:
  name: rclone-configs
  namespace: {{ .Release.Namespace }}
data:
    rclone.conf: |
        [{{ include "rondb.rcloneRestoreRemoteName" . }}]
{{- if eq $.Values.restoreFromBackup.objectStorageProvider "s3" }}
        type = s3
        provider = {{ .Values.restoreFromBackup.s3.provider }}
        env_auth = true
        region = {{ .Values.restoreFromBackup.s3.region }}
{{- if .Values.restoreFromBackup.s3.serverSideEncryption }}
        server_side_encryption = {{ .Values.restoreFromBackup.s3.serverSideEncryption }}
{{- end }}
        storage_class = STANDARD
{{- if .Values.restoreFromBackup.s3.endpoint }}
        endpoint = {{ .Values.restoreFromBackup.s3.endpoint }}
{{- end }}
{{- end }}

        [{{ include "rondb.rcloneBackupRemoteName" . }}]
{{- if eq $.Values.backups.objectStorageProvider "s3" }}
        type = s3
        provider = {{ .Values.backups.s3.provider }}
        env_auth = true
        region = {{ .Values.backups.s3.region }}
{{- if .Values.backups.s3.serverSideEncryption }}
        server_side_encryption = {{ .Values.backups.s3.serverSideEncryption }}
{{- end }}
        storage_class = STANDARD
{{- if .Values.backups.s3.endpoint }}
        endpoint = {{ .Values.backups.s3.endpoint }}
{{- end }}
{{- end }}
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: rondb-backups-rb
  namespace: {{ .Release.Namespace }}
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: rondb-backups-role
subjects:
  - kind: ServiceAccount
    name: rondb-backups-sa
    namespace: {{ .Release.Namespace }}
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: rondb-backups-sa
  namespace: {{ .Release.Namespace }}
{{ include "rondb.serviceAccountAnnotations" $ | indent 2 }}
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: rondb-backups-role
  namespace: {{ .Release.Namespace }}
rules:
  - apiGroups: [""]
    resources: ["pods"]
    verbs: ["get"]
  - apiGroups: [""]
    resources: ["pods/exec"]
    verbs: ["create"]
    resourceNames:
{{- range $nodeGroup := until ($.Values.clusterSize.numNodeGroups | int) }}
{{- range $replica := until 3 }}
    - node-group-{{ $nodeGroup }}-{{ $replica }}
{{- end }}
{{- end }}
    - {{ include "rondb.mysqldPodname" . }}
{{- end }}
