# Copyright (c) 2024-2025 Hopsworks AB. All rights reserved.

# This file is auto-generated from the values.schema.json file.
# The file is also used to generate the GitHub Pages documentation.
# Schema JSON files allow defining restrictions, enums and references.
# Use script .github/json_to_yaml.py to generate this file.
backups:
  enabled: null
  objectStorageProvider: null
  pathPrefix: rondb_backup
  s3:
    bucketName: null
    endpoint: null
    keyCredentialsSecret:
      key: null
      name: null
    provider: null
    region: null
    secretCredentialsSecret:
      key: null
      name: null
    serverSideEncryption: null
  schedule: null
benchmarking:
  dbt2:
    numWarehouses: 4
    runMulti: |-
      # NUM_MYSQL_SERVERS  NUM_WAREHOUSES  NUM_TERMINALS
      2 1 1
      2 2 1
      2 2 2
    runSingle: |-
      # NUM_MYSQL_SERVERS  NUM_WAREHOUSES  NUM_TERMINALS
      1 1 1
      1 2 1
      1 4 1
      1 4 2
  enabled: false
  sysbench:
    minimizeBandwidth: false
    rows: 100000
    threadCountsToRun: 1;2;4;8;12;16;24;32;64
  type: sysbench
  ycsb:
    schemata: CREATE TABLE IF NOT EXISTS ycsb.usertable (YCSB_KEY VARCHAR(255) PRIMARY
      KEY, FIELD0 varbinary(4096));
clusterSize:
  activeDataReplicas: 2
  maxNumMySQLServers: 5
  maxNumRdrs: 2
  minNumMySQLServers: 1
  minNumRdrs: 1
  numNodeGroups: 1
enableSecurityContext: true
globalReplication:
  clusterNumber: 1
  primary:
    binlogFilename: binlog
    enabled: false
    expireBinlogsDays: 1.5
    ignoreDatabases: []
    includeDatabases: []
    logReplicaUpdates: false
    maxNumBinlogServers: 2
    numBinlogServers: 2
  secondary:
    enabled: false
    replicateFrom:
      binlogServerHosts: []
      clusterNumber: 2
      ignoreDatabases: []
      ignoreTables: []
      includeDatabases: []
      includeTables: []
      useTlsConnection: false
imagePullPolicy: IfNotPresent
imagePullSecrets: []
images:
  dataValidation:
    name: python
    registry: docker.io
    repository: ''
    tag: 3.12-slim
  mysqldExporter:
    name: mysqld_exporter
    registry: docker.hops.works
    repository: hopsworks
    tag: 0.11.3
  rondb:
    name: rondb
    registry: docker.io
    repository: hopsworks
    tag: 24.10.15
  toolbox:
    name: hwutils
    registry: docker.io
    repository: hopsworks
    tag: '0.8'
  upgrade2410revokegrants:
    name: rondb
    registry: docker.io
    repository: hopsworks
    tag: 22.10.13-0.7
isMultiNodeCluster: true
meta:
  binlogServers:
    externalLoadBalancers:
      annotations: {}
      class: null
      enabled: true
      namePrefix: binlog-server
      port: 3306
    headlessClusterIp:
      name: headless-binlog-servers
      port: 3306
    statefulSet:
      endToEndTls:
        enabled: false
        filenames:
          ca: null
          cert: tls.crt
          key: tls.key
        secretName: binlog-end-to-end-tls
        supplyOwnSecret: false
      name: mysqld-binlog-servers
  mgmd:
    headlessClusterIp:
      annotations: {}
      name: headless-mgmds
      port: 1186
    statefulSetName: mgmds
  mysqld:
    addSysNiceCapability: true
    clusterIp:
      annotations: {}
      name: mysqld
      port: 3306
    exporter:
      metricsPort: 9104
    externalLoadBalancer:
      annotations: {}
      class: null
      enabled: false
      managed: true
      name: mysqld-external
      nodeSelector: {}
      port: 3306
    headlessClusterIp:
      name: headless-mysqlds
      port: 3306
    statefulSet:
      endToEndTls:
        enabled: false
        filenames:
          ca: null
          cert: tls.crt
          key: tls.key
        secretName: mysqld-end-to-end-tls
        supplyOwnSecret: false
      name: mysqlds
  ndbmtd:
    statefulSet:
      podAnnotations: {}
  rdrs:
    clusterIp:
      annotations:
        consul.hashicorp.com/service-name: rdrs
        prometheus.io/path: /metrics
        prometheus.io/port: '4406'
        prometheus.io/scheme: https
        prometheus.io/scrape: 'true'
      name: rdrs
    externalLoadBalancer:
      annotations: {}
      class: null
      enabled: false
      managed: true
      name: rdrs-external
      nodeSelector: {}
    headlessClusterIpName: rdrs-cluster-ip
    ingress:
      class: nginx
      dnsNames: []
      enabled: false
      tls:
        enabled: true
        ipAddresses: []
      useDefaultBackend: true
    statefulSet:
      endToEndTls:
        enabled: false
        filenames:
          ca: null
          cert: tls.crt
          key: tls.key
        secretName: rdrs-end-to-end-tls
        supplyOwnSecret: false
      name: rdrs
  replicaAppliers:
    headlessClusterIp:
      name: headless-replica-appliers
      port: 3306
    statefulSet:
      endToEndTls:
        enabled: false
        filenames:
          ca: null
          cert: tls.crt
          key: tls.key
        secretName: replica-applier-end-to-end-tls
        supplyOwnSecret: false
      name: mysqld-replica-appliers
mysql:
  clusterUser: helm
  config:
    maxConnectErrors: '9223372036854775807'
    maxConnections: 512
    maxPreparedStmtCount: 65530
  credentialsSecretName: mysql-passwords
  exporter:
    enabled: false
    maxUserConnections: 3
    username: exporter
  sqlInitContent: {}
  supplyOwnSecret: false
  users: []
networkPolicy:
  mgmds:
    enabled: true
    ingressSelectors: []
  ndbmtds:
    enabled: true
    ingressSelectors: []
nodeSelector:
  backup: {}
  mgmd: {}
  mysqld: {}
  ndbmtd: {}
  rdrs: {}
priorityClass: rondb-high-priority
rdrs:
  externalMetadataCluster:
    mgmds: []
    slotsPerNode: 1
  hpa:
    additionalMetrics: []
resources:
  limits:
    cpus:
      benchs: 2
      mgmds: 0.2
      mysqldExporters: 0.2
      mysqlds: 2
      ndbmtds: 2
      rdrs: 2
      restore: 1
    memory:
      benchsMiB: 500
      mysqldExportersMiB: 100
      mysqldMiB: 1400
      ndbmtdsMiB: 5000
      rdrsMiB: 500
  requests:
    cpus:
      benchs: 1
      mgmds: 0.2
      mysqldExporters: 0.02
      mysqlds: 1
      rdrs: 1
    memory:
      benchsMiB: 100
      mysqldExportersMiB: 50
      mysqldMiB: 650
      rdrsMiB: 100
    storage:
      binlogGiB: 4
      classes:
        binlogFiles: null
        default: null
        diskColumns: null
        mgmd: null
      diskColumnGiB: 2
      logGiB: 2
      ndbmtdGiB: 30
      redoLogGiB: 4
      relayLogGiB: 2
      undoLogsGiB: 4
restoreFromBackup:
  backupId: null
  excludeDatabases: []
  excludeTables: []
  objectStorageProvider: null
  pathPrefix: rondb_backup
  s3:
    bucketName: null
    endpoint: null
    keyCredentialsSecret:
      key: null
      name: null
    provider: null
    region: null
    secretCredentialsSecret:
      key: null
      name: null
    serverSideEncryption: null
rondbConfig:
  ActivateRateLimits: 0
  DiskPageBufferMemory: null
  EmptyApiSlots: 8
  HeartbeatIntervalDbApi: 5000
  HeartbeatIntervalDbDb: 5000
  InitialTablespaceSizeGiB: -1
  MaxDMLOperationsPerTransaction: 32768
  MaxNoOfAttributes: null
  MaxNoOfConcurrentOperations: 65536
  MaxNoOfTables: null
  MaxNoOfTriggers: null
  MySQLdSlotsPerNode: 4
  OsCpuOverhead: null
  OsStaticOverhead: null
  RdrsMetadataSlotsPerNode: 1
  RdrsSlotsPerNode: 1
  RedoBuffer: null
  ReplicationMemory: null
  ReservedConcurrentOperations: null
  SchemaMemory: null
  SharedGlobalMemory: null
  TotalMemoryConfig: null
  TransactionDeadlockDetectionTimeout: 1500
  TransactionInactiveTimeout: 15000
  TransactionMemory: null
serviceAccountAnnotations: {}
staticCpuManagerPolicy: false
terminationGracePeriodSeconds: 60
timeoutsMinutes:
  restoreNativeBackup: 120
  singleSetupMySQLds: 5
tls:
  caSecretName: null
tolerations:
  backup: []
  mgmd: []
  mysqld: []
  ndbmtd: []
  rdrs: []
